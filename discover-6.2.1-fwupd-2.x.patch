diff -up discover-6.2.1/libdiscover/backends/FwupdBackend/FwupdResource.cpp.omv~ discover-6.2.1/libdiscover/backends/FwupdBackend/FwupdResource.cpp
--- discover-6.2.1/libdiscover/backends/FwupdBackend/FwupdResource.cpp.omv~	2024-10-16 21:58:17.823217047 +0200
+++ discover-6.2.1/libdiscover/backends/FwupdBackend/FwupdResource.cpp	2024-10-16 21:59:05.963767939 +0200
@@ -173,7 +173,11 @@ void FwupdResource::setReleaseDetails(Fw
 void FwupdResource::setDeviceDetails(FwupdDevice *dev)
 {
     m_isLiveUpdatable = fwupd_device_has_flag(dev, FWUPD_DEVICE_FLAG_UPDATABLE);
+#ifdef FWUPD_DEVICE_FLAG_ONLY_OFFLINE
     m_isOnlyOffline = fwupd_device_has_flag(dev, FWUPD_DEVICE_FLAG_ONLY_OFFLINE);
+#else
+    m_isOnlyOffline = false;
+#endif
     m_needsReboot = fwupd_device_has_flag(dev, FWUPD_DEVICE_FLAG_NEEDS_REBOOT);
 
     if (fwupd_device_get_name(dev)) {
diff -up discover-6.2.1/libdiscover/backends/FwupdBackend/FwupdTransaction.cpp.omv~ discover-6.2.1/libdiscover/backends/FwupdBackend/FwupdTransaction.cpp
--- discover-6.2.1/libdiscover/backends/FwupdBackend/FwupdTransaction.cpp.omv~	2024-10-16 21:57:45.012841625 +0200
+++ discover-6.2.1/libdiscover/backends/FwupdBackend/FwupdTransaction.cpp	2024-10-16 21:57:56.952978240 +0200
@@ -85,7 +85,9 @@ void FwupdTransaction::fwupdInstall(cons
 
     /* only offline supported */
     if (m_app->isOnlyOffline())
+#ifdef FWUPD_INSTALL_FLAG_OFFLINE
         install_flags = static_cast<FwupdInstallFlags>(install_flags | FWUPD_INSTALL_FLAG_OFFLINE);
+#endif
 
     if (!fwupd_client_install(m_backend->client, m_app->deviceId().toUtf8().constData(), file.toUtf8().constData(), install_flags, nullptr, &error)) {
         m_backend->handleError(error);
diff -up discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdBackend.cpp.omv~ discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdBackend.cpp
--- discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdBackend.cpp.omv~	2024-10-23 18:49:07.277966264 +0200
+++ discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdBackend.cpp	2024-10-23 18:54:33.331192280 +0200
@@ -198,7 +198,12 @@ FwupdResource *FwupdBackend::createApp(F
         return nullptr;
     }
 
+#if FWUPD_CHECK_VERSION(1, 5, 6)
+    GPtrArray *locations = fwupd_release_get_locations(release);
+    const QUrl update_uri(locations->len == 0 ? QString::fromUtf8("") : QString::fromUtf8((const gchar *)g_ptr_array_index(locations, 0)));
+#else
     const QUrl update_uri(QString::fromUtf8(fwupd_release_get_uri(release)));
+#endif
     if (!update_uri.isValid()) {
         qWarning() << "Fwupd Error: No Update URI available for" << app->name() << "[" << app->id() << "]";
         return nullptr;
@@ -323,7 +328,7 @@ void FwupdBackend::setRemotes(GPtrArray
 {
     for (uint i = 0; remotes && i < remotes->len; i++) {
         FwupdRemote *remote = (FwupdRemote *)g_ptr_array_index(remotes, i);
-        if (!fwupd_remote_get_enabled(remote))
+	if (!fwupd_remote_has_flag(remote, FWUPD_REMOTE_FLAG_ENABLED))
             continue;
 
         if (fwupd_remote_get_kind(remote) == FWUPD_REMOTE_KIND_LOCAL
@@ -331,7 +336,7 @@ void FwupdBackend::setRemotes(GPtrArray
             continue;
         }
 
-        fwupd_client_refresh_remote_async(client, remote, m_cancellable, fwupd_client_refresh_remote_cb, this);
+        fwupd_client_refresh_remote_async(client, remote, FWUPD_CLIENT_DOWNLOAD_FLAG_NONE, m_cancellable, fwupd_client_refresh_remote_cb, this);
     }
 }
 
diff -up discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdResource.cpp.omv~ discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdResource.cpp
--- discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdResource.cpp.omv~	2024-10-23 18:56:23.522289068 +0200
+++ discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdResource.cpp	2024-10-23 18:57:41.422987840 +0200
@@ -161,7 +161,8 @@ void FwupdResource::setReleaseDetails(Fw
     m_description = QString::fromUtf8((fwupd_release_get_description(release)));
     m_homepage = QUrl(QString::fromUtf8(fwupd_release_get_homepage(release)));
     m_license = QString::fromUtf8(fwupd_release_get_license(release));
-    m_updateURI = QString::fromUtf8(fwupd_release_get_uri(release));
+    GPtrArray *locations = fwupd_release_get_locations(release);
+    m_updateURI = locations->len == 0 ? QString::fromUtf8("") : QString::fromUtf8((const gchar *)g_ptr_array_index(locations, 0));
 }
 
 void FwupdResource::setDeviceDetails(FwupdDevice *dev)
@@ -186,7 +187,6 @@ void FwupdResource::setDeviceDetails(Fwu
     m_vendor = QString::fromUtf8(fwupd_device_get_vendor(dev));
     m_releaseDate = QDateTime::fromSecsSinceEpoch(fwupd_device_get_created(dev)).date();
     m_availableVersion = QString::fromUtf8(fwupd_device_get_version(dev));
-    m_description = QString::fromUtf8((fwupd_device_get_description(dev)));
 
     if (fwupd_device_get_icons(dev)->len >= 1)
         m_iconName = QString::fromUtf8((const gchar *)g_ptr_array_index(fwupd_device_get_icons(dev), 0)); // Check whether given icon exists or not!
diff -up discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdSourcesBackend.cpp.omv~ discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdSourcesBackend.cpp
--- discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdSourcesBackend.cpp.omv~	2024-10-23 18:54:48.321341332 +0200
+++ discover-5.27.11/libdiscover/backends/FwupdBackend/FwupdSourcesBackend.cpp	2024-10-23 18:56:02.132075967 +0200
@@ -34,7 +34,7 @@ public:
         case Qt::CheckStateRole: {
             if (value == Qt::Checked) {
                 m_backend->m_currentItem = item;
-                if (fwupd_remote_get_approval_required(remote)) {
+                if (fwupd_remote_has_flag(remote, FWUPD_REMOTE_FLAG_APPROVAL_REQUIRED)) {
                     QString eulaText = i18n("The remote %1 require that you accept their license:\n %2",
                                             QString::fromUtf8(fwupd_remote_get_title(remote)),
                                             QString::fromUtf8(fwupd_remote_get_agreement(remote)));
@@ -88,7 +88,7 @@ void FwupdSourcesBackend::populateSource
         it->setData(id, AbstractSourcesBackend::IdRole);
         it->setData(QVariant(QString::fromUtf8(fwupd_remote_get_title(remote))), Qt::ToolTipRole);
         it->setCheckable(true);
-        it->setCheckState(fwupd_remote_get_enabled(remote) ? Qt::Checked : Qt::Unchecked);
+        it->setCheckState(fwupd_remote_has_flag(remote, FWUPD_REMOTE_FLAG_ENABLED) ? Qt::Checked : Qt::Unchecked);
         m_sources->appendRow(it);
     }
 }
@@ -121,7 +121,7 @@ void FwupdSourcesBackend::cancel()
 {
     FwupdRemote *remote =
         fwupd_client_get_remote_by_id(backend->client, m_currentItem->data(AbstractSourcesBackend::IdRole).toString().toUtf8().constData(), nullptr, nullptr);
-    m_currentItem->setCheckState(fwupd_remote_get_enabled(remote) ? Qt::Checked : Qt::Unchecked);
+    m_currentItem->setCheckState(fwupd_remote_has_flag(remote, FWUPD_REMOTE_FLAG_ENABLED) ? Qt::Checked : Qt::Unchecked);
 
     m_currentItem = nullptr;
 }
